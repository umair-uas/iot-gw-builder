<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>IoT Gateway Data Viewer</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        canvas {
            max-width: 800px;
            margin: 20px auto;
            display: block;
        }
        #filters {
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <h1>IoT Gateway Data Viewer</h1>
    <div id="filters">
        <label for="start_time">Start Time:</label>
        <input type="text" id="start_time" placeholder="Select start time">
        <label for="end_time">End Time:</label>
        <input type="text" id="end_time" placeholder="Select end time">
        <button onclick="fetchFilteredData()">Apply Filters</button>
    </div>
    <canvas id="dataChart"></canvas>
    <script>
        // Initialize Flatpickr for time selection
        flatpickr("#start_time", { enableTime: true, dateFormat: "Y-m-d H:i:S" });
        flatpickr("#end_time", { enableTime: true, dateFormat: "Y-m-d H:i:S" });

        // Initialize Chart.js for data visualization
        const ctx = document.getElementById('dataChart').getContext('2d');
        const dataChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [], // Timestamps
                datasets: [
                    {
                        label: 'ICMP Requests',
                        data: [],
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderWidth: 1,
                    },
                    {
                        label: 'ICMP Responses',
                        data: [],
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderWidth: 1,
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: true },
                    tooltip: { enabled: true },
                },
                scales: {
                    x: { title: { display: true, text: 'Time' } },
                    y: { title: { display: true, text: 'Packet Count' } },
                }
            }
        });

        // Fetch and Populate Data on Chart
        function fetchFilteredData() {
            const startTime = document.getElementById('start_time').value;
            const endTime = document.getElementById('end_time').value;

            fetch(`/fetch_data?start_time=${startTime}&end_time=${endTime}`)
                .then(response => response.json())
                .then(data => {
                    // Update chart labels and data
                    dataChart.data.labels = data.map(d => d.timestamp);
                    dataChart.data.datasets[0].data = data.map(d => d.icmpReq);
                    dataChart.data.datasets[1].data = data.map(d => d.icmpResp);
                    dataChart.update();
                })
                .catch(error => console.error('Error fetching data:', error));
        }
    </script>
</body>
</html>
